import numpy as np

# i, j
board = np.array([
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 130, 2, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 90, 2, 1, 1, 4, 1, 1, 2, 100, 2, 1, 4, 1, 1, 2, 110, 2, 1, 4, 1, 1, 2, 120, 2, 0, 0, 0, 0, 0],
    [0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0],
    [2, 50, 2, 1, 1, 4, 1, 1, 2, 60, 2, 1, 1, 4, 1, 1, 2, 70, 2, 1, 1, 4, 1, 1, 2, 80, 2, 0, 0, 0],
    [0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0],
    [2, 10, 2, 1, 1, 4, 1, 1, 2, 20, 2, 1, 1, 4, 1, 1, 2, 30, 2, 1, 1, 4, 1, 1, 2, 40, 2, 0, 0, 0],
    [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 4, 1, 1, 2, 5, 2, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
])

characters = {
    #Dessin
    0: ' ',
    1: '.',
    2: '|',
    3: 'O',
    4: ':',
    5: 'X',

    #Pièces
    130: 'E',
    120: 12,
    110: 11,
    100: 10,
    90: 9,
    80: 8,
    70: 7,
    60: 6,
    50: 5,
    40: 4,
    30: 3,
    20: 2,
    10: 1

}

def Coor():
    p13 = [0, 21]
    p12 = [2, 23]
    p11 = [2, 16]
    p10 = [2, 9]
    p9 = [2, 1]
    p8 = [4, 25]
    p7 = [4, 17]
    p6 = [4, 9]
    p5 = [4, 1]
    p4 = [6, 25]
    p3 = [6, 17]
    p2 = [6, 9]
    p1 = [6, 1]
    p0 = [8, 9]

    salles = [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13]
    voisins = {}

    for i in range(len(salles)):
        voisins[i] = []

    voisins[0] = [1, 2, 3]
    voisins[1] = [0, 2, 5, 6]
    voisins[2] = [0, 1, 3, 5, 6, 7]
    voisins[3] = [0, 2, 4, 6, 7, 8]
    voisins[4] = [3, 7, 8]
    voisins[5] = [1, 2, 6, 9, 10]
    voisins[6] = [1, 2, 3, 5, 7, 9, 10, 11]
    voisins[7] = [2, 3, 4, 6, 8, 10, 11, 12]
    voisins[8] = [3, 4, 5, 7]
    voisins[9] = [5, 6, 10]
    voisins[10] = [5, 6, 7, 9, 11]
    voisins[11] = [6, 7, 8, 10, 12, 13]
    voisins[12] = [8, 11, 13]
    voisins[13] = [11, 12]

    return salles, voisins

salles, voisins = Coor()

def Print_board():
    for i in board:
        for j in i:
            print(characters[j], end='')
        print()

def deplacements(pos):
    i, j = salles[pos]
    caractere = board[i, j]

    # Position actuelle et pièces accessibles
    print(f"Position: {pos}")
    print(f"Pièces voisines: {voisins[pos]}")

    # Choix du joueur
    choix = int(input("Choisissez une pièce: "))
    prev_pos = pos

    # Vérifie validité du choix
    if choix in voisins[pos]:
    # MAJ de la position
        board[i, j] = pos  # 
        new_i, new_j = salles[choix]
        board[new_i, new_j] = 5

        return choix
    else:
        print("Vous ne pouvez pas aller là.")

    # Si position invalide : revenir a position précédente
    return pos


# CODE PRINCIPAL

# Position de départ : 0 
pos_joueur = 0

while True:
    Print_board()

    # Déplacement et MAJ
    pos_joueur = deplacements(pos_joueur)
